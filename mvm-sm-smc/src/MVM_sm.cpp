//
// ex: set ro:
// DO NOT EDIT.
// generated by smc (http://smc.sourceforge.net/)
// from file : MVM.sm
//

#include "MVM.h"
#include "../src\MVM_sm.h"

using namespace statemap;

// Static class declarations.
MainMap_StartUpMode MainMap::StartUpMode("MainMap::StartUpMode", 0);
MainMap_PCV_VentilationOff MainMap::PCV_VentilationOff("MainMap::PCV_VentilationOff", 1);
MainMap_PCV_Inspiration MainMap::PCV_Inspiration("MainMap::PCV_Inspiration", 2);
MainMap_PCV_Expiration MainMap::PCV_Expiration("MainMap::PCV_Expiration", 3);

void MVMState::run(MVMContext& context)
{
    Default(context);
}

void MVMState::switchon(MVMContext& context)
{
    Default(context);
}

void MVMState::Default(MVMContext& context)
{
    throw (
        TransitionUndefinedException(
            context.getState().getName(),
            context.getTransition()));

}

void MainMap_StartUpMode::switchon(MVMContext& context)
{

    context.getState().Exit(context);
    context.setState(MainMap::PCV_VentilationOff);
    context.getState().Entry(context);


}

void MainMap_PCV_VentilationOff::run(MVMContext& context)
{

    context.getState().Exit(context);
    context.setState(MainMap::PCV_Inspiration);
    context.getState().Entry(context);


}

//
// Local variables:
//  buffer-read-only: t
// End:
//
